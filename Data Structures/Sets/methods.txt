ğŸ”¹ add(item)
Adds a single item to the set. If the item already exists, it wonâ€™t be added again.

ğŸ”¹ update(iterable)
Adds multiple items to the set from another iterable (like a list, tuple, or another set).

ğŸ”¹ union(other_set) or |
Returns a new set containing all unique elements from both sets.

ğŸ”¹ intersection(other_set) or &
Returns a new set with only the elements common to both sets.

ğŸ”¹ intersection_update(other_set)
Keeps only the elements found in both sets; modifies the original set.

ğŸ”¹ difference(other_set) or -
Returns a new set with elements in the first set but not in the second.

ğŸ”¹ difference_update(other_set)
Removes elements from the original set that are also in the other set.

ğŸ”¹ symmetric_difference(other_set) or ^
Returns a new set with elements in either set, but not in both.

ğŸ”¹ symmetric_difference_update(other_set)
Updates the original set to contain only the non-duplicate elements from both sets.

ğŸ”¹ remove(item)
Removes the item from the set. Throws an error if the item is not present.

ğŸ”¹ discard(item)
Removes the item from the set. Does not throw an error if the item is not present.

ğŸ”¹ pop()
Removes and returns a random item from the set.

ğŸ”¹ clear()
Removes all items from the set, leaving it empty.

ğŸ”¹ del
Deletes the set completely from memory.

